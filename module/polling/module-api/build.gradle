plugins {
    id 'com.ewerk.gradle.plugins.querydsl' version '1.0.10'
}

dependencies {
    implementation project(path: ":module-common", configuration: 'default')
    implementation project(path: ":module-core", configuration: 'default')
    implementation project(path: ":grpc-common", configuration: 'default')

    /* JPA */
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.8.0'
    implementation 'com.querydsl:querydsl-jpa'
    implementation 'com.querydsl:querydsl-apt'

    /* h2 */
    runtimeOnly 'com.h2database:h2'

    /* maria */
    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'

    /* Swagger */
    implementation "io.springfox:springfox-boot-starter:3.0.0"
    implementation "io.springfox:springfox-swagger-ui:3.0.0"

    /* scheduled 테스트 */
    testImplementation 'org.awaitility:awaitility:4.2.0'
}

/*queryDsl*/
def querydslDir = "$buildDir/generated/querydsl"
querydsl {
    library = "com.querydsl:querydsl-apt"
    jpa = true
    querydslSourcesDir = querydslDir
}
sourceSets {
    main.java.srcDir querydslDir
}
configurations {
    querydsl.extendsFrom compileClasspath
}
compileQuerydsl {
    options.annotationProcessorPath = configurations.querydsl
    doFirst { if (file(querydslDir).exists()) delete(file(querydslDir)) }
}
